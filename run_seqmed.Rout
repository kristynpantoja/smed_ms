
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ################################################################################
> # last updated: 08/18/21
> # purpose: to create a list of seqmed simulations
> # dimT = 2:
> #   dimensions (1, 2) vs dimensions (1, 2, 3)
> #   where the true dimensions are (1, 2)
> # dimT = 3:
> #   dimensions (1, 2) vs dimensions (1, 2, 3)
> #   where the true dimensions are (1, 2, 3)
> 
> dimT = 3 # 2, 3
> 
> ################################################################################
> # Sources/Libraries
> ################################################################################
> output_dir = "lm_experiments/lmvs/outputs"
> functions_dir = "functions"
> 
> # for seqmed design
> source(paste(functions_dir, "/SeqMEDvs.R", sep = ""))
> source(paste(functions_dir, "/SeqMEDvs_batch.R", sep = ""))
> source(paste(functions_dir, "/charge_function_q.R", sep = ""))
> source(paste(functions_dir, "/construct_design_matrix.R", sep = ""))
> source(paste(functions_dir, "/wasserstein_distance.R", sep = ""))
> source(paste(functions_dir, "/posterior_parameters.R", sep = ""))
> source(paste(functions_dir, "/simulate_y.R", sep = ""))
> 
> # for generating initial data
> source(paste(functions_dir, "/variance_marginal_y.R", sep = ""))
> 
> # for box-hill design
> source(paste(functions_dir, "/boxhill.R", sep = ""))
> source(paste(functions_dir, "/kl_divergence.R", sep = ""))
> 
> # set up parallelization
> library(foreach)
> library(future)
> library(doFuture)
> library(parallel)
> registerDoFuture()
> nworkers = detectCores()
> plan(multisession, workers = nworkers)
> 
> library(rngtools)
> library(doRNG)
> rng.seed = 123 # 123, 345
> registerDoRNG(rng.seed)
> 
> ################################################################################
> # simulation settings, shared for both scenarios
> ################################################################################
> 
> # simulations settings
> numSims = 100
> Nin = 5 #1, 5
> numSeq = 27
> seqN = 1
> Nnew = numSeq * seqN
> Nttl = Nin + Nnew 
> xmin = -1
> xmax = 1
> dimX = 3
> numCandidates = 5000
> x_seq = seq(from = xmin, to = xmax, length.out = floor((numCandidates)^(1 / 3)))
> candidates = as.matrix(expand.grid(x_seq, x_seq, x_seq))
> sigmasq = 0.1 # 0.3
> 
> # hypothesis settings
> type01 = c(2, 3)
> mu_full = c(0.5, 0.5, 0.5) #
> indices0 = c(1, 2) #
> indices1 = 1:length(mu_full)
> mu0 = rep(0, length(indices0))
> mu1 = rep(0, length(indices1))
> sigmasq01 = 0.25 # 0.5
> V0 = diag(rep(sigmasq01,length(mu0)))
> V1 = diag(rep(sigmasq01,length(mu1)))
> model0 = list(
+   indices = indices0, beta.mean = mu0, beta.var = V0)
> model1 = list(
+   indices = indices1, beta.mean = mu1, beta.var = V1)
> 
> # seqmed settings
> p = 3
> k = 4 * p
> 
> # boxhill settings
> prior_probs = rep(1 / 2, 2)
> 
> ################################################################################
> # scenario settings
> ################################################################################
> if(dimT == 2){
+   betaT = mu_full[indices0]
+   indicesT = indices0
+   fT = function(x) x[, indicesT, drop = FALSE] %*% betaT
+ } else if(dimT == 3){
+   betaT = mu_full[indices1]
+   indicesT = indices1
+   fT = function(x) x[, indicesT, drop = FALSE] %*% betaT
+ }
> 
> ################################################################################
> # run simulations
> ################################################################################
> 
> # generate seqmeds
> registerDoRNG(rng.seed)
> seqmed_list = foreach(i = 1:numSims) %dorng% {
+   print(paste0("starting simulation ", i, " out of ", numSims))
+   initD = matrix(runif(
+     n = dimX * Nin, min = xmin, max = xmax), nrow = Nin, ncol = dimX)
+   inity = simulateY_frommultivarfunction(
+     x = initD[, indicesT, drop = FALSE], true.function = fT, 
+     error.var = sigmasq)
+   SeqMEDvs(
+     y.in = inity, x.in = initD, model0 = model0, model1 = model1, 
+     error.var = sigmasq, candidates = candidates, true.function = fT, 
+     true.indices = indicesT, dimX = dimX, k = k, xmin = xmin, xmax = xmax, 
+     p = p, numSeq = numSeq, seqN = seqN, alpha_seq = 1, prints = FALSE)
+ }
[1] "starting simulation 1 out of 100"
[1] "starting simulation 2 out of 100"
[1] "starting simulation 3 out of 100"
[1] "starting simulation 4 out of 100"
[1] "starting simulation 5 out of 100"
[1] "starting simulation 6 out of 100"
[1] "starting simulation 7 out of 100"
[1] "starting simulation 8 out of 100"
[1] "starting simulation 9 out of 100"
[1] "starting simulation 10 out of 100"
[1] "starting simulation 11 out of 100"
[1] "starting simulation 12 out of 100"
[1] "starting simulation 13 out of 100"
[1] "starting simulation 14 out of 100"
[1] "starting simulation 15 out of 100"
[1] "starting simulation 16 out of 100"
[1] "starting simulation 17 out of 100"
[1] "starting simulation 18 out of 100"
[1] "starting simulation 19 out of 100"
[1] "starting simulation 20 out of 100"
[1] "starting simulation 21 out of 100"
[1] "starting simulation 22 out of 100"
[1] "starting simulation 23 out of 100"
[1] "starting simulation 24 out of 100"
[1] "starting simulation 25 out of 100"
[1] "starting simulation 26 out of 100"
[1] "starting simulation 27 out of 100"
[1] "starting simulation 28 out of 100"
[1] "starting simulation 29 out of 100"
[1] "starting simulation 30 out of 100"
[1] "starting simulation 31 out of 100"
[1] "starting simulation 32 out of 100"
[1] "starting simulation 33 out of 100"
[1] "starting simulation 34 out of 100"
[1] "starting simulation 35 out of 100"
[1] "starting simulation 36 out of 100"
[1] "starting simulation 37 out of 100"
[1] "starting simulation 38 out of 100"
[1] "starting simulation 39 out of 100"
[1] "starting simulation 40 out of 100"
[1] "starting simulation 41 out of 100"
[1] "starting simulation 42 out of 100"
[1] "starting simulation 43 out of 100"
[1] "starting simulation 44 out of 100"
[1] "starting simulation 45 out of 100"
[1] "starting simulation 46 out of 100"
[1] "starting simulation 47 out of 100"
[1] "starting simulation 48 out of 100"
[1] "starting simulation 49 out of 100"
[1] "starting simulation 50 out of 100"
[1] "starting simulation 51 out of 100"
[1] "starting simulation 52 out of 100"
[1] "starting simulation 53 out of 100"
[1] "starting simulation 54 out of 100"
[1] "starting simulation 55 out of 100"
[1] "starting simulation 56 out of 100"
[1] "starting simulation 57 out of 100"
[1] "starting simulation 58 out of 100"
[1] "starting simulation 59 out of 100"
[1] "starting simulation 60 out of 100"
[1] "starting simulation 61 out of 100"
[1] "starting simulation 62 out of 100"
[1] "starting simulation 63 out of 100"
[1] "starting simulation 64 out of 100"
[1] "starting simulation 65 out of 100"
[1] "starting simulation 66 out of 100"
[1] "starting simulation 67 out of 100"
[1] "starting simulation 68 out of 100"
[1] "starting simulation 69 out of 100"
[1] "starting simulation 70 out of 100"
[1] "starting simulation 71 out of 100"
[1] "starting simulation 72 out of 100"
[1] "starting simulation 73 out of 100"
[1] "starting simulation 74 out of 100"
[1] "starting simulation 75 out of 100"
[1] "starting simulation 76 out of 100"
[1] "starting simulation 77 out of 100"
[1] "starting simulation 78 out of 100"
[1] "starting simulation 79 out of 100"
[1] "starting simulation 80 out of 100"
[1] "starting simulation 81 out of 100"
[1] "starting simulation 82 out of 100"
[1] "starting simulation 83 out of 100"
[1] "starting simulation 84 out of 100"
[1] "starting simulation 85 out of 100"
[1] "starting simulation 86 out of 100"
[1] "starting simulation 87 out of 100"
[1] "starting simulation 88 out of 100"
[1] "starting simulation 89 out of 100"
[1] "starting simulation 90 out of 100"
[1] "starting simulation 91 out of 100"
[1] "starting simulation 92 out of 100"
[1] "starting simulation 93 out of 100"
[1] "starting simulation 94 out of 100"
[1] "starting simulation 95 out of 100"
[1] "starting simulation 96 out of 100"
[1] "starting simulation 97 out of 100"
[1] "starting simulation 98 out of 100"
[1] "starting simulation 99 out of 100"
[1] "starting simulation 100 out of 100"
> saveRDS(seqmed_list, paste0(
+   output_dir, "/dim", dimT, 
+   "_seqmed", 
+   "_Nttl", Nttl,
+   "_Nin", Nin,
+   "_numSeq", numSeq,
+   "_seqN", seqN,
+   "_seed", rng.seed,
+   ".rds"))
> 
> 
> 
> proc.time()
   user  system elapsed 
 45.232   1.171 389.644 
